using System;
using System.CodeDom;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.IO;
using System.Text;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace Solink.AddIn.Helpers.Test
{
    /// <summary>
    /// A class to test <see cref="RestartableAddInGenerator"/>.
    /// </summary>
    [TestClass]
    public class RestartableAddInGeneratorTest
    {
        const string NamespaceName = "Solink.Sample";
        const string HostViewFullName = "Solink.HostViews.IThing";
        const string ClassName = "RestartableThing";
        const string ExpectedRestartableThing = @"//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Solink.Sample
{
    
    
    public sealed class RestartableThing : Solink.AddIn.Helpers.RestartableAddIn<Solink.AddIn.Helpers.Test.IThing>, Solink.AddIn.Helpers.Test.IThing
    {
        
        public RestartableThing(Solink.AddIn.Helpers.AddInFacade facade, System.AddIn.Hosting.AddInToken token, System.AddIn.Hosting.Platform platform) : 
                base(facade, token, platform)
        {
        }
        
        public int Id
        {
            get
            {
                return base.Func(_ => _.Id);
            }
            set
            {
                base.Action(_ => _.Id = value);
            }
        }
        
        public static Solink.AddIn.Helpers.Test.IThing Factory(Solink.AddIn.Helpers.AddInFacade facade, System.AddIn.Hosting.AddInToken token, System.AddIn.Hosting.Platform platform)
        {
            return new RestartableThing(facade, token, platform);
        }
        
        public int ComputeAnswerToLifeAndUniverseEverything()
        {
            return base.Func(_ => _.ComputeAnswerToLifeAndUniverseEverything());
        }
        
        public void AddToList(System.Collections.Generic.IList<string> strings)
        {
            base.Action(_ => _.AddToList(strings));
        }
    }
}
";

        private static void AssertGeneratedCode(string expected, CodeCompileUnit compileUnit)
        {
            var provider = CodeDomProvider.CreateProvider("CSharp");
            var options = new CodeGeneratorOptions
            {
                BracingStyle = "C",
            };
            var sb = new StringBuilder();
            using (var writer = new StringWriter(sb))
            {
                provider.GenerateCodeFromCompileUnit(compileUnit, writer, options);
            }
            var actual = sb.ToString();
            Assert.AreEqual(expected, actual);
        }

        [TestMethod]
        public void GenerateFromTypeIThing()
        {
            var actual = RestartableAddInGenerator.GenerateFromType(NamespaceName, typeof(IThing));

            AssertGeneratedCode(ExpectedRestartableThing, actual);
        }

        [TestMethod]
        public void CreateCompileUnit()
        {
            var actual = RestartableAddInGenerator.CreateCompileUnit();

            const string expected = @"//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

";
            AssertGeneratedCode(expected, actual);
        }

        [TestMethod]
        public void CreateNamespace()
        {
            var actual = RestartableAddInGenerator.CreateCompileUnit();

            RestartableAddInGenerator.CreateNamespace(actual, NamespaceName);

            const string expected = @"//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Solink.Sample
{
    
}
";
            AssertGeneratedCode(expected, actual);
        }

        [TestMethod]
        public void CreateClass()
        {
            var actual = RestartableAddInGenerator.CreateCompileUnit();

            var ns = RestartableAddInGenerator.CreateNamespace(actual, NamespaceName);
            RestartableAddInGenerator.CreateClass(ns, ClassName, HostViewFullName);

            const string expected = @"//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Solink.Sample
{
    
    
    public sealed class RestartableThing : Solink.AddIn.Helpers.RestartableAddIn<Solink.HostViews.IThing>, Solink.HostViews.IThing
    {
    }
}
";
            AssertGeneratedCode(expected, actual);
        }

        [TestMethod]
        public void CreateConstructor()
        {
            var actual = RestartableAddInGenerator.CreateCompileUnit();

            var ns = RestartableAddInGenerator.CreateNamespace(actual, NamespaceName);
            var @class = RestartableAddInGenerator.CreateClass(ns, ClassName, HostViewFullName);
            RestartableAddInGenerator.CreateConstructor(@class);

            const string expected = @"//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Solink.Sample
{
    
    
    public sealed class RestartableThing : Solink.AddIn.Helpers.RestartableAddIn<Solink.HostViews.IThing>, Solink.HostViews.IThing
    {
        
        public RestartableThing(Solink.AddIn.Helpers.AddInFacade facade, System.AddIn.Hosting.AddInToken token, System.AddIn.Hosting.Platform platform) : 
                base(facade, token, platform)
        {
        }
    }
}
";
            AssertGeneratedCode(expected, actual);
        }

        [TestMethod]
        public void CreateFactoryMethod()
        {
            var actual = RestartableAddInGenerator.CreateCompileUnit();
            var ns = RestartableAddInGenerator.CreateNamespace(actual, NamespaceName);
            var @class = RestartableAddInGenerator.CreateClass(ns, ClassName, HostViewFullName);
            RestartableAddInGenerator.CreateConstructor(@class);

            RestartableAddInGenerator.CreateFactoryMethod(@class, HostViewFullName);

            const string expected = @"//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Solink.Sample
{
    
    
    public sealed class RestartableThing : Solink.AddIn.Helpers.RestartableAddIn<Solink.HostViews.IThing>, Solink.HostViews.IThing
    {
        
        public RestartableThing(Solink.AddIn.Helpers.AddInFacade facade, System.AddIn.Hosting.AddInToken token, System.AddIn.Hosting.Platform platform) : 
                base(facade, token, platform)
        {
        }
        
        public static Solink.HostViews.IThing Factory(Solink.AddIn.Helpers.AddInFacade facade, System.AddIn.Hosting.AddInToken token, System.AddIn.Hosting.Platform platform)
        {
            return new RestartableThing(facade, token, platform);
        }
    }
}
";
            AssertGeneratedCode(expected, actual);
        }

        [TestMethod]
        public void CreateFuncMethodForVoid()
        {
            var actual = RestartableAddInGenerator.CreateCompileUnit();
            var ns = RestartableAddInGenerator.CreateNamespace(actual, NamespaceName);
            var @class = RestartableAddInGenerator.CreateClass(ns, ClassName, HostViewFullName);

            var methodParameters = new[]
            {
                Tuple.Create(typeof(IList<string>), "strings"),
            };
            RestartableAddInGenerator.CreateFuncMethod(@class, "AddToList", methodParameters, typeof(void));

            const string expected = @"//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Solink.Sample
{
    
    
    public sealed class RestartableThing : Solink.AddIn.Helpers.RestartableAddIn<Solink.HostViews.IThing>, Solink.HostViews.IThing
    {
        
        public void AddToList(System.Collections.Generic.IList<string> strings)
        {
            base.Action(_ => _.AddToList(strings));
        }
    }
}
";
            AssertGeneratedCode(expected, actual);
        }

        [TestMethod]
        public void CreateFuncMethod()
        {
            var actual = RestartableAddInGenerator.CreateCompileUnit();
            var ns = RestartableAddInGenerator.CreateNamespace(actual, NamespaceName);
            var @class = RestartableAddInGenerator.CreateClass(ns, ClassName, HostViewFullName);

            var methodParameters = new Tuple<Type, string>[]
            {
            };
            RestartableAddInGenerator.CreateFuncMethod(@class, "ComputeAnswerToLifeAndUniverseEverything", methodParameters, typeof(int));

            const string expected = @"//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Solink.Sample
{
    
    
    public sealed class RestartableThing : Solink.AddIn.Helpers.RestartableAddIn<Solink.HostViews.IThing>, Solink.HostViews.IThing
    {
        
        public int ComputeAnswerToLifeAndUniverseEverything()
        {
            return base.Func(_ => _.ComputeAnswerToLifeAndUniverseEverything());
        }
    }
}
";
            AssertGeneratedCode(expected, actual);
        }

        [TestMethod]
        public void CreateProperty()
        {
            var actual = RestartableAddInGenerator.CreateCompileUnit();
            var ns = RestartableAddInGenerator.CreateNamespace(actual, NamespaceName);
            var @class = RestartableAddInGenerator.CreateClass(ns, ClassName, HostViewFullName);

            RestartableAddInGenerator.CreateProperty(@class, "Id", typeof(int), true);

            const string expected = @"//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Solink.Sample
{
    
    
    public sealed class RestartableThing : Solink.AddIn.Helpers.RestartableAddIn<Solink.HostViews.IThing>, Solink.HostViews.IThing
    {
        
        public int Id
        {
            get
            {
                return base.Func(_ => _.Id);
            }
            set
            {
                base.Action(_ => _.Id = value);
            }
        }
    }
}
";
            AssertGeneratedCode(expected, actual);
        }

        [TestMethod]
        public void GenerateClassNameIThing()
        {
            var actual = RestartableAddInGenerator.GenerateClassName("IThing");
            Assert.AreEqual("RestartableThing", actual);
        }

        [TestMethod]
        [ExpectedException(typeof(ArgumentException))]
        public void GenerateClassNameThing()
        {
            RestartableAddInGenerator.GenerateClassName("Thing");
        }
    }
}
